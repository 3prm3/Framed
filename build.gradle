plugins {
    id 'fabric-loom'
    id 'maven-publish'
    id "org.jetbrains.kotlin.jvm"
}

//noinspection GroovyUnusedAssignment
sourceCompatibility = JavaVersion.VERSION_1_8
//noinspection GroovyUnusedAssignment
targetCompatibility = JavaVersion.VERSION_1_8

//noinspection GroovyUnusedAssignment
archivesBaseName = project.archives_base_name
//noinspection GroovyAssignabilityCheck
version = project.mod_version
//noinspection GroovyAssignabilityCheck
group = project.maven_group

minecraft {
}


repositories {
    maven { url = "http://maven.fabricmc.net/" }
    maven {
        name = "CottonMC"
        url = "https://server.bbkr.space/artifactory/libs-release"
    }
    maven {
        name = "dblsaiko"
        url = "https://maven.dblsaiko.net/"
    }
    maven { url "https://jitpack.io" }
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"

    implementation 'com.google.code.gson:gson:2.8.6'

    modImplementation "io.github.cottonmc:LibGui:${project.libgui_version}"

    compileOnly "org.apiguardian:apiguardian-api:1.0.0"
    compileOnly "com.google.code.findbugs:jsr305:3.0.2"

    modApi ("grondag:frex-${project.mc_tag}:${project.frex_version}.+") { transitive = false }
    modImplementation ("grondag:jmx-${project.mc_tag}:${project.jmx_version}.+") { transitive = false }

    modImplementation "com.github.siphalor:nbt-crafting:1.16-2.0-SNAPSHOT"
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    //noinspection GrDeprecatedAPIUsage
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        //noinspection GroovyAssignabilityCheck
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            //noinspection GroovyAssignabilityCheck
            artifact(remapJar) {
                //noinspection GroovyAssignabilityCheck
                builtBy remapJar
            }
            //noinspection GroovyAssignabilityCheck
            artifact(sourcesJar) {
                //noinspection GroovyAssignabilityCheck
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}